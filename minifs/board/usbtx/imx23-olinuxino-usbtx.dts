/*
 * Sample configuration for an olinuxino
 * (C) Michel Pollet <buserror@gmail.com>
 */

/dts-v1/;


#include "imx23.dtsi"

/ {
	model = "i.MX23 Olinuxino Low Cost Board";
	compatible = "olimex,imx23-olinuxino", "fsl,imx23";

	memory {
		reg = <0x40000000 0x04000000>;
	};

	apb@80000000 {
		apbh@80000000 {
			pinctrl@80018000 {
				i2c_gpio: i2c_gpio {
					reg = <0>;
					fsl,pinmux-ids = <
						MX23_PAD_GPMI_WPN__GPIO_0_23
						MX23_PAD_GPMI_RDN__GPIO_0_25
					>;
					fsl,pull-up = <1>;
				};

				spi_cs: spi_cs {
					reg = <0>;
					fsl,pinmux-ids = <
						MX23_PAD_GPMI_CLE__GPIO_0_16
					>;
					fsl,pull-up = <1>;
				};

				// USBTX: configure SP2 as 8 bits wide out
				ssp2_8bit_pins_a: ssp2-8bit@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX23_PAD_GPMI_D00__SSP2_DATA0
						MX23_PAD_GPMI_D01__SSP2_DATA1
						MX23_PAD_GPMI_D02__SSP2_DATA2 
						MX23_PAD_GPMI_D03__SSP2_DATA3 
						MX23_PAD_GPMI_D04__SSP2_DATA4 
						MX23_PAD_GPMI_D05__SSP2_DATA5 
						MX23_PAD_GPMI_D06__SSP2_DATA6 
						MX23_PAD_GPMI_D07__SSP2_DATA7 
						MX23_PAD_GPMI_WRN__SSP2_SCK 
						MX23_PAD_GPMI_RDY1__SSP2_CMD
					>;
					fsl,drive-strength = <MXS_DRIVE_8mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_ENABLE>;
				};

			};
			ssp0: ssp@80010000 {
				compatible = "fsl,imx23-mmc";
				pinctrl-names = "default";
				pinctrl-0 = <&mmc0_4bit_pins_a &mmc0_pins_fixup>;
				bus-width = <4>;
				status = "okay";
			};

			ssp1: ssp@80034000 {
				compatible = "fsl,imx23-spi";
				pinctrl-names = "default";
				pinctrl-0 = <&ssp2_8bit_pins_a>;
				bus-width = <8>;
				status = "okay";

				device@0 {	/* Userland Access */
					compatible = "spidev";
					reg = <0>;
					spi-max-frequency = <40000000>;
				};
			};

			pinctrl@80018000 {
				pinctrl-names = "default";
				pinctrl-0 = <&hog_pins_a>;

				hog_pins_a: hog@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX23_PAD_GPMI_ALE__GPIO_0_17
					>;
					fsl,drive-strength = <0>;
					fsl,voltage = <1>;
					fsl,pull-up = <0>;
				};

				led_pin_gpio2_1: led_gpio2_1@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX23_PAD_SSP1_DETECT__GPIO_2_1
					>;
					fsl,drive-strength = <0>;
					fsl,voltage = <1>;
					fsl,pull-up = <0>;
				};
			};
		};

		apbx@80040000 {
			duart: serial@80070000 {
				pinctrl-names = "default";
				pinctrl-0 = <&duart_pins_a>;
				status = "okay";
			};

			auart0: serial@8006c000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart0_2pins_a>;
				status = "okay";
			};

			usbphy0: usbphy@8007c000 {
				status = "okay";
			};
			/* Disable built in RTC, we use the i2c one */
			rtc@8005c000 {
				status = "disable";
			};
		};
	};

	ahb@80080000 {
		usb0: usb@80080000 {
			vbus-supply = <&reg_usb0_vbus>;
			status = "okay";
		};
	};

	regulators {
		compatible = "simple-bus";

		reg_usb0_vbus: usb0_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb0_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			enable-active-high;
			startup-delay-us = <300>; /* LAN9215 requires a POR of 200us minimum */
			gpio = <&gpio0 17 0>;
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pin_gpio2_1>;

		user {
			label = "green";
			gpios = <&gpio2 1 1>;
			linux,default-trigger = "heartbeat";
		};
	};

	/*
	 * maxi declares the i2c by default as software -- so instanciate a linux driver
	 * for it
	 */
	i2c@0 {
		compatible = "i2c-gpio";
		gpios = <&gpio0 25 0 /* sda */
			 &gpio0 23 0 /* scl */
			>;
		i2c-gpio,delay-us = <2>;	/* ~100 kHz */
		i2c-gpio,scl-output-only = <0>;
		i2c-gpio,sda-open-drain = <1>;

		pinctrl-names = "default";
		pinctrl-0 = <&i2c_gpio>;

		status = "okay";
	};

};
